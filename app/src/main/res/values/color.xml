<?xml version="1.0" encoding="utf-8"?>
<!--
~ Copyright (C) 2019 The Android Open Source Project
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~      http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->

<resources>

    <!--Color-->

    <!--Material uses an organized approach to applying color by -->
    <!--providing a set of attributes which define semantically named -->
    <!--colors for generalized UI concepts such as backgrounds, -->
    <!--surfaces, type and icons. Using these attributes throughout -->
    <!--your app makes it easy to change a single color, or the -->
    <!--entire theme, and have those changes cascade through the interface.-->

    <!--Color is customized by overriding Material Components color -->
    <!--attributes with custom color values. In this project, your themeâ€™s -->
    <!--color attributes are already overridden with default values -->
    <!--defined in this file, colors.xml. This file holds the color palette -->
    <!--for both light and dark themes of the Material baseline (default) -->
    <!--theme. Next to each color is a comment describing the semantic theme -->
    <!--color attribute which the palette color maps to.-->

    <!--Replace the colors here with your own brand's palette and ensure -->
    <!--they are applied as desired in both light and dark theme -->
    <!--(values/themes.xml and values-night/themes.xml). For more -->
    <!--information on color palettes and their application color -->
    <!--theme attributes, see https://www.youtube.com/watch?v=Owkf8DhAOSo-->

    <!--Color palette-->
    <!--Color palette-->

    <color name="reply_white_50">#ffffff</color>

    <color name="reply_black_800">#121212</color>
    <color name="reply_black_900">#000000</color>

    <color name="reply_blue_50">#eef0f2</color>
    <color name="reply_blue_100">#d2dbe0</color>
    <color name="reply_blue_200">#adbbc4</color>
    <color name="reply_blue_300">#8ca2ae</color>
    <color name="reply_blue_600">#4a6572</color>
    <color name="reply_blue_700">#037aeb</color>
    <color name="reply_blue_800">#232f34</color>

    <color name="reply_orange_300">#fbd790</color>
    <color name="reply_orange_400">#f9be64</color>
    <color name="reply_orange_500">#f9aa33</color>



    <color name="reply_red_200">#cf7779</color>
    <color name="reply_red_400">#ff4c5d</color>

    <color name="reply_white_50_alpha_060">#99ffffff</color>

    <color name="reply_blue_50_alpha_060">#99eef0f2</color>

    <color name="reply_black_900_alpha_020">#33000000</color>
    <color name="reply_black_900_alpha_087">#de000000</color>
    <color name="reply_black_900_alpha_060">#99000000</color>



    <!--Nav bar color protection for behavior differences between Android P and Q. All sdk-->
    <!--levels should draw fullscreen. P should color the nav bar with a translucent background -->
    <!--to guard for contrast. Q should have a transparent nav bar as Q will automatically -->
    <!--handles contrast by either dynamically coloring the nav bar handle (gesture nav) -->
    <!--or automatically applying a translucent background (3-button mode).-->
    <color name="nav_bar">@color/reply_black_900_alpha_020</color>

</resources>
